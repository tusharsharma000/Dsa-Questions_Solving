Self Dividing Numbers -  https://leetcode.com/problems/self-dividing-numbers/description/-  Easy

A self-dividing number is a number that is divisible by every digit it contains.

For example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.
A self-dividing number is not allowed to contain the digit zero.

Given two integers left and right, return a list of all the self-dividing numbers in the range [left, right] (both inclusive).

 

Example 1:

Input: left = 1, right = 22
Output: [1,2,3,4,5,6,7,8,9,11,12,15,22]


Approach  -  All digit of number should be divisible by full number like above 128 every digit can be divisble 128 so we just need to check if the current no. after modulo with 10 is not 0 and the current digit should alway be zero is
if we modulo it with current number


Code- 
var selfDividingNumbers = function(left, right) {
    let array = [];
   for (let i = left;i<=right ;i++) {
        let num = i;
        let isNum = false;
        while(num>0) {
            // console.log(num)
            let digit = num%10;
            if (digit === 0 || i%digit !==0){
                // console.log("sss");
            isNum = false;    
              break;
            } 
            num = Math.floor(num/10);
            // console.log(num);
            isNum = true;
        }
        if (isNum) {
            array.push(i);
        }
        }
    return array;
};
